import React, { useState } from 'react';
import { Card, Row, Col, Button, Input, Typography, Tag, Space, Select, List, Avatar } from 'antd';
import { SearchOutlined, EnvironmentOutlined, ClockCircleOutlined, UserOutlined } from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;
const { Search } = Input;
const { Option } = Select;

interface JobPosition {
  id: number;
  title: string;
  department: string;
  location: string;
  type: string;
  experience: string;
  salary: string;
  description: string;
  requirements: string[];
  benefits: string[];
  postedDate: string;
  isUrgent?: boolean;
  isRemote?: boolean;
}

const CareersPage: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedDepartment, setSelectedDepartment] = useState('all');
  const [selectedLocation, setSelectedLocation] = useState('all');

  const departments = [
    { key: 'all', label: 'T·∫•t C·∫£ Ph√≤ng Ban' },
    { key: 'tech', label: 'C√¥ng Ngh·ªá' },
    { key: 'marketing', label: 'Marketing' },
    { key: 'sales', label: 'Kinh Doanh' },
    { key: 'design', label: 'Thi·∫øt K·∫ø' },
    { key: 'hr', label: 'Nh√¢n S·ª±' },
    { key: 'finance', label: 'T√†i Ch√≠nh' },
  ];

  const locations = [
    { key: 'all', label: 'T·∫•t C·∫£ ƒê·ªãa ƒêi·ªÉm' },
    { key: 'hcm', label: 'TP. H·ªì Ch√≠ Minh' },
    { key: 'hanoi', label: 'H√† N·ªôi' },
    { key: 'danang', label: 'ƒê√† N·∫µng' },
    { key: 'remote', label: 'L√†m Vi·ªác T·ª´ Xa' },
  ];

  const jobPositions: JobPosition[] = [
    {
      id: 1,
      title: 'Senior Frontend Developer',
      department: 'tech',
      location: 'hcm',
      type: 'Full-time',
      experience: '3-5 nƒÉm',
      salary: '25-40 tri·ªáu',
      description: 'Ph√°t tri·ªÉn giao di·ªán ng∆∞·ªùi d√πng cho c√°c ·ª©ng d·ª•ng web v√† mobile c·ªßa Tonic Store.',
      requirements: [
        'Th√†nh th·∫°o React, TypeScript, Next.js',
        'Kinh nghi·ªám v·ªõi Ant Design, Tailwind CSS',
        'Hi·ªÉu bi·∫øt v·ªÅ RESTful API v√† GraphQL',
        'Kinh nghi·ªám l√†m vi·ªác v·ªõi Git v√† Agile',
        'Ti·∫øng Anh giao ti·∫øp t·ªët',
      ],
      benefits: [
        'L∆∞∆°ng c·∫°nh tranh + th∆∞·ªüng hi·ªáu su·∫•t',
        'B·∫£o hi·ªÉm s·ª©c kh·ªèe cao c·∫•p',
        'L√†m vi·ªác linh ho·∫°t, work from home',
        'ƒê√†o t·∫°o v√† ph√°t tri·ªÉn k·ªπ nƒÉng',
        'M√¥i tr∆∞·ªùng l√†m vi·ªác tr·∫ª trung, nƒÉng ƒë·ªông',
      ],
      postedDate: '2024-01-10',
      isUrgent: true,
    },
    {
      id: 2,
      title: 'UI/UX Designer',
      department: 'design',
      location: 'hcm',
      type: 'Full-time',
      experience: '2-4 nƒÉm',
      salary: '18-30 tri·ªáu',
      description: 'Thi·∫øt k·∫ø giao di·ªán ng∆∞·ªùi d√πng v√† tr·∫£i nghi·ªám cho c√°c s·∫£n ph·∫©m digital c·ªßa c√¥ng ty.',
      requirements: [
        'Th√†nh th·∫°o Figma, Adobe Creative Suite',
        'Kinh nghi·ªám thi·∫øt k·∫ø cho web v√† mobile',
        'Hi·ªÉu bi·∫øt v·ªÅ Design System',
        'Portfolio th·ªÉ hi·ªán kh·∫£ nƒÉng thi·∫øt k·∫ø',
        'K·ªπ nƒÉng giao ti·∫øp v√† teamwork t·ªët',
      ],
      benefits: [
        'L∆∞∆°ng c·∫°nh tranh + th∆∞·ªüng d·ª± √°n',
        'B·∫£o hi·ªÉm s·ª©c kh·ªèe v√† nha khoa',
        'M√°y MacBook Pro ƒë·ªÉ l√†m vi·ªác',
        'Tham gia c√°c workshop thi·∫øt k·∫ø',
        'C∆° h·ªôi thƒÉng ti·∫øn nhanh',
      ],
      postedDate: '2024-01-08',
    },
    {
      id: 3,
      title: 'Digital Marketing Manager',
      department: 'marketing',
      location: 'hanoi',
      type: 'Full-time',
      experience: '4-6 nƒÉm',
      salary: '20-35 tri·ªáu',
      description: 'Qu·∫£n l√Ω v√† ph√°t tri·ªÉn c√°c chi·∫øn d·ªãch marketing digital cho th∆∞∆°ng hi·ªáu Tonic Store.',
      requirements: [
        'Kinh nghi·ªám qu·∫£n l√Ω team marketing',
        'Th√†nh th·∫°o Google Ads, Facebook Ads',
        'Hi·ªÉu bi·∫øt v·ªÅ SEO, SEM, Content Marketing',
        'K·ªπ nƒÉng ph√¢n t√≠ch d·ªØ li·ªáu v√† b√°o c√°o',
        'Kinh nghi·ªám trong ng√†nh e-commerce',
      ],
      benefits: [
        'L∆∞∆°ng c·∫°nh tranh + th∆∞·ªüng KPI',
        'B·∫£o hi·ªÉm s·ª©c kh·ªèe to√†n di·ªán',
        'L√†m vi·ªác linh ho·∫°t, hybrid',
        'Budget cho c√°c kh√≥a h·ªçc n√¢ng cao',
        'M√¥i tr∆∞·ªùng s√°ng t·∫°o, th·ª≠ th√°ch',
      ],
      postedDate: '2024-01-05',
    },
    {
      id: 4,
      title: 'Backend Developer (Node.js)',
      department: 'tech',
      location: 'remote',
      type: 'Full-time',
      experience: '2-4 nƒÉm',
      salary: '20-35 tri·ªáu',
      description: 'Ph√°t tri·ªÉn v√† duy tr√¨ c√°c API v√† microservices cho h·ªá th·ªëng e-commerce.',
      requirements: [
        'Th√†nh th·∫°o Node.js, Express.js',
        'Kinh nghi·ªám v·ªõi MongoDB, PostgreSQL',
        'Hi·ªÉu bi·∫øt v·ªÅ Docker, Kubernetes',
        'Kinh nghi·ªám v·ªõi AWS ho·∫∑c GCP',
        'Ti·∫øng Anh giao ti·∫øp t·ªët',
      ],
      benefits: [
        'L∆∞∆°ng c·∫°nh tranh + th∆∞·ªüng hi·ªáu su·∫•t',
        'L√†m vi·ªác 100% t·ª´ xa',
        'B·∫£o hi·ªÉm s·ª©c kh·ªèe cao c·∫•p',
        'M√°y t√≠nh v√† thi·∫øt b·ªã l√†m vi·ªác',
        'Th·ªùi gian l√†m vi·ªác linh ho·∫°t',
      ],
      postedDate: '2024-01-03',
      isRemote: true,
    },
    {
      id: 5,
      title: 'Sales Executive',
      department: 'sales',
      location: 'hcm',
      type: 'Full-time',
      experience: '1-3 nƒÉm',
      salary: '12-20 tri·ªáu + hoa h·ªìng',
      description: 'T√¨m ki·∫øm v√† ph√°t tri·ªÉn kh√°ch h√†ng m·ªõi, duy tr√¨ m·ªëi quan h·ªá v·ªõi kh√°ch h√†ng hi·ªán t·∫°i.',
      requirements: [
        'K·ªπ nƒÉng giao ti·∫øp v√† thuy·∫øt ph·ª•c t·ªët',
        'Kinh nghi·ªám b√°n h√†ng B2B ho·∫∑c B2C',
        'Hi·ªÉu bi·∫øt v·ªÅ s·∫£n ph·∫©m th·ªùi trang',
        'K·ªπ nƒÉng s·ª≠ d·ª•ng CRM',
        'Tinh th·∫ßn l√†m vi·ªác nh√≥m cao',
      ],
      benefits: [
        'L∆∞∆°ng c∆° b·∫£n + hoa h·ªìng h·∫•p d·∫´n',
        'B·∫£o hi·ªÉm s·ª©c kh·ªèe c∆° b·∫£n',
        'ƒê√†o t·∫°o k·ªπ nƒÉng b√°n h√†ng',
        'C∆° h·ªôi thƒÉng ti·∫øn nhanh',
        'M√¥i tr∆∞·ªùng l√†m vi·ªác nƒÉng ƒë·ªông',
      ],
      postedDate: '2024-01-01',
    },
  ];

  const filteredJobs = jobPositions.filter(job => {
    const matchesSearch = job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         job.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesDepartment = selectedDepartment === 'all' || job.department === selectedDepartment;
    const matchesLocation = selectedLocation === 'all' || job.location === selectedLocation;
    return matchesSearch && matchesDepartment && matchesLocation;
  });

  const companyValues = [
    {
      title: 'ƒê·ªïi M·ªõi',
      description: 'Lu√¥n t√¨m ki·∫øm nh·ªØng gi·∫£i ph√°p s√°ng t·∫°o v√† c·∫£i ti·∫øn',
      icon: 'üí°',
    },
    {
      title: 'H·ª£p T√°c',
      description: 'L√†m vi·ªác nh√≥m hi·ªáu qu·∫£ v√† h·ªó tr·ª£ l·∫´n nhau',
      icon: 'ü§ù',
    },
    {
      title: 'Ph√°t Tri·ªÉn',
      description: 'T·∫°o c∆° h·ªôi ph√°t tri·ªÉn ngh·ªÅ nghi·ªáp cho nh√¢n vi√™n',
      icon: 'üìà',
    },
    {
      title: 'C√¢n B·∫±ng',
      description: 'C√¢n b·∫±ng gi·ªØa c√¥ng vi·ªác v√† cu·ªôc s·ªëng c√° nh√¢n',
      icon: '‚öñÔ∏è',
    },
  ];

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            C∆° H·ªôi Ngh·ªÅ Nghi·ªáp
          </Title>
          <Paragraph className="text-lg text-gray-600">
            Gia nh·∫≠p ƒë·ªôi ng≈© Tonic Store v√† c√πng ch√∫ng t√¥i x√¢y d·ª±ng t∆∞∆°ng lai c·ªßa th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠
          </Paragraph>
        </div>

        {/* Search and Filters */}
        <Card className="mb-8">
          <Row gutter={[16, 16]} align="middle">
            <Col xs={24} sm={12} md={8}>
              <Search
                placeholder="T√¨m ki·∫øm v·ªã tr√≠..."
                allowClear
                size="large"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                prefix={<SearchOutlined />}
              />
            </Col>
            <Col xs={24} sm={12} md={4}>
              <Select
                value={selectedDepartment}
                onChange={setSelectedDepartment}
                size="large"
                className="w-full"
              >
                {departments.map(dept => (
                  <Option key={dept.key} value={dept.key}>
                    {dept.label}
                  </Option>
                ))}
              </Select>
            </Col>
            <Col xs={24} sm={12} md={4}>
              <Select
                value={selectedLocation}
                onChange={setSelectedLocation}
                size="large"
                className="w-full"
              >
                {locations.map(location => (
                  <Option key={location.key} value={location.key}>
                    {location.label}
                  </Option>
                ))}
              </Select>
            </Col>
            <Col xs={24} sm={12} md={8}>
              <div className="text-center">
                <Text strong className="text-lg">
                  {filteredJobs.length} v·ªã tr√≠ ƒëang tuy·ªÉn d·ª•ng
                </Text>
              </div>
            </Col>
          </Row>
        </Card>

        {/* Company Values */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">Gi√° Tr·ªã C√¥ng Ty</Title>
          <Row gutter={[24, 24]}>
            {companyValues.map((value, index) => (
              <Col xs={24} sm={12} lg={6} key={index}>
                <Card className="text-center h-full">
                  <div className="text-4xl mb-4">{value.icon}</div>
                  <Title level={4} className="mb-2">{value.title}</Title>
                  <Paragraph className="text-gray-600">{value.description}</Paragraph>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Job Listings */}
        <div className="mb-8">
          <Title level={2} className="mb-6">V·ªã Tr√≠ Tuy·ªÉn D·ª•ng</Title>
          <div className="space-y-6">
            {filteredJobs.map(job => (
              <Card key={job.id} className="hover:shadow-lg transition-shadow">
                <div className="flex flex-col md:flex-row md:items-start md:justify-between">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-2">
                      <Title level={4} className="mb-0">{job.title}</Title>
                      {job.isUrgent && <Tag color="red">Kh·∫©n c·∫•p</Tag>}
                      {job.isRemote && <Tag color="blue">Remote</Tag>}
                    </div>
                    
                    <div className="flex flex-wrap gap-4 mb-4">
                      <Space>
                        <EnvironmentOutlined />
                        <Text>{job.location === 'hcm' ? 'TP. H·ªì Ch√≠ Minh' : 
                               job.location === 'hanoi' ? 'H√† N·ªôi' :
                               job.location === 'danang' ? 'ƒê√† N·∫µng' : 'L√†m vi·ªác t·ª´ xa'}</Text>
                      </Space>
                      <Space>
                        <ClockCircleOutlined />
                        <Text>{job.type}</Text>
                      </Space>
                      <Space>
                        <UserOutlined />
                        <Text>{job.experience}</Text>
                      </Space>
                    </div>
                    
                    <Paragraph className="text-gray-600 mb-4">
                      {job.description}
                    </Paragraph>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <Tag color="green">L∆∞∆°ng: {job.salary}</Tag>
                      <Tag color="blue">{job.department === 'tech' ? 'C√¥ng Ngh·ªá' :
                                         job.department === 'marketing' ? 'Marketing' :
                                         job.department === 'sales' ? 'Kinh Doanh' :
                                         job.department === 'design' ? 'Thi·∫øt K·∫ø' :
                                         job.department === 'hr' ? 'Nh√¢n S·ª±' :
                                         job.department === 'finance' ? 'T√†i Ch√≠nh' : job.department}</Tag>
                    </div>
                  </div>
                  
                  <div className="flex flex-col gap-2">
                    <Button type="primary" size="large">
                      ·ª®ng Tuy·ªÉn Ngay
                    </Button>
                    <Button size="large">
                      Xem Chi Ti·∫øt
                    </Button>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>

        {/* Why Work With Us */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">T·∫°i Sao Ch·ªçn Tonic Store?</Title>
          <Row gutter={[24, 24]}>
            <Col xs={24} md={8}>
              <Card className="text-center h-full">
                <div className="text-4xl mb-4">üöÄ</div>
                <Title level={4}>M√¥i Tr∆∞·ªùng NƒÉng ƒê·ªông</Title>
                <Paragraph>
                  L√†m vi·ªác trong m√¥i tr∆∞·ªùng tr·∫ª trung, s√°ng t·∫°o v·ªõi nh·ªØng d·ª± √°n th√∫ v·ªã v√† th·ª≠ th√°ch.
                </Paragraph>
              </Card>
            </Col>
            <Col xs={24} md={8}>
              <Card className="text-center h-full">
                <div className="text-4xl mb-4">üìö</div>
                <Title level={4}>Ph√°t Tri·ªÉn Ngh·ªÅ Nghi·ªáp</Title>
                <Paragraph>
                  C∆° h·ªôi h·ªçc h·ªèi, ph√°t tri·ªÉn k·ªπ nƒÉng v√† thƒÉng ti·∫øn trong s·ª± nghi·ªáp.
                </Paragraph>
              </Card>
            </Col>
            <Col xs={24} md={8}>
              <Card className="text-center h-full">
                <div className="text-4xl mb-4">üíº</div>
                <Title level={4}>Ch·∫ø ƒê·ªô H·∫•p D·∫´n</Title>
                <Paragraph>
                  L∆∞∆°ng c·∫°nh tranh, b·∫£o hi·ªÉm t·ªët, l√†m vi·ªác linh ho·∫°t v√† nhi·ªÅu ph√∫c l·ª£i kh√°c.
                </Paragraph>
              </Card>
            </Col>
          </Row>
        </div>

        {/* CTA */}
        <div className="text-center">
          <Card className="bg-blue-50 border-blue-200">
            <Space direction="vertical" size="large">
              <Title level={3} className="text-blue-800">
                Kh√¥ng T√¨m Th·∫•y V·ªã Tr√≠ Ph√π H·ª£p?
              </Title>
              <Paragraph className="text-blue-700">
                G·ª≠i CV c·ªßa b·∫°n cho ch√∫ng t√¥i, ch√∫ng t√¥i s·∫Ω li√™n h·ªá khi c√≥ v·ªã tr√≠ ph√π h·ª£p
              </Paragraph>
              <Button type="primary" size="large">
                G·ª≠i CV T·ª± Do
              </Button>
            </Space>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default CareersPage;
