import React, { useRef } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Card, Steps, Typography, Row, Col, Space, Button, List, Alert, Avatar } from 'antd';
import { 
  UserOutlined, 
  ShopOutlined, 
  DollarOutlined, 
  CheckCircleOutlined,
  PhoneOutlined,
  MessageOutlined,
  TrophyOutlined
} from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;

const HowToSellPage: React.FC = () => {
  const contentRefs = useRef<(HTMLDivElement | null)[]>([]);

  const handleStepChange = (index: number) => {
    contentRefs.current[index]?.scrollIntoView({
      behavior: 'smooth',
      block: 'start',
    });
  };
  const steps = [
    {
      title: 'ƒêƒÉng K√Ω B√°n H√†ng',
      description: 'T·∫°o t√†i kho·∫£n ng∆∞·ªùi b√°n',
      icon: <UserOutlined />,
      content: (
        <div>
          <Paragraph>
            B∆∞·ªõc ƒë·∫ßu ti√™n ƒë·ªÉ tr·ªü th√†nh ng∆∞·ªùi b√°n tr√™n Tonic Store:
          </Paragraph>
          <List
            dataSource={[
              'ƒêƒÉng k√Ω t√†i kho·∫£n ng∆∞·ªùi b√°n',
              'Cung c·∫•p th√¥ng tin doanh nghi·ªáp',
              'X√°c minh danh t√≠nh v√† gi·∫•y ph√©p kinh doanh',
              'K√Ω h·ª£p ƒë·ªìng h·ª£p t√°c',
            ]}
            renderItem={(item) => (
              <List.Item>
                <CheckCircleOutlined className="text-green-500 mr-2" />
                {item}
              </List.Item>
            )}
          />
        </div>
      ),
    },
    {
      title: 'T·∫°o C·ª≠a H√†ng',
      description: 'Thi·∫øt l·∫≠p c·ª≠a h√†ng online',
      icon: <ShopOutlined />,
      content: (
        <div>
          <Paragraph>
            Thi·∫øt l·∫≠p c·ª≠a h√†ng c·ªßa b·∫°n tr√™n n·ªÅn t·∫£ng:
          </Paragraph>
          <List
            dataSource={[
              'Ch·ªçn t√™n c·ª≠a h√†ng v√† logo',
              'Vi·∫øt m√¥ t·∫£ c·ª≠a h√†ng h·∫•p d·∫´n',
              'Thi·∫øt l·∫≠p ch√≠nh s√°ch b√°n h√†ng',
              'C·∫•u h√¨nh th√¥ng tin li√™n h·ªá',
            ]}
            renderItem={(item) => (
              <List.Item>
                <CheckCircleOutlined className="text-green-500 mr-2" />
                {item}
              </List.Item>
            )}
          />
        </div>
      ),
    },
    {
      title: 'ƒêƒÉng S·∫£n Ph·∫©m',
      description: 'Th√™m s·∫£n ph·∫©m v√†o c·ª≠a h√†ng',
      icon: <ShopOutlined />,
      content: (
        <div>
          <Paragraph>
            T·∫°o danh m·ª•c s·∫£n ph·∫©m cho c·ª≠a h√†ng:
          </Paragraph>
          <List
            dataSource={[
              'Ch·ª•p ·∫£nh s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao',
              'Vi·∫øt m√¥ t·∫£ chi ti·∫øt v√† h·∫•p d·∫´n',
              'ƒê·∫∑t gi√° c·∫°nh tranh',
              'Thi·∫øt l·∫≠p kho h√†ng v√† v·∫≠n chuy·ªÉn',
            ]}
            renderItem={(item) => (
              <List.Item>
                <CheckCircleOutlined className="text-green-500 mr-2" />
                {item}
              </List.Item>
            )}
          />
        </div>
      ),
    },
    {
      title: 'B√°n H√†ng & Thu L·ª£i',
      description: 'Qu·∫£n l√Ω ƒë∆°n h√†ng v√† thu nh·∫≠p',
      icon: <DollarOutlined />,
      content: (
        <div>
          <Paragraph>
            Qu·∫£n l√Ω ho·∫°t ƒë·ªông b√°n h√†ng hi·ªáu qu·∫£:
          </Paragraph>
          <List
            dataSource={[
              'X·ª≠ l√Ω ƒë∆°n h√†ng nhanh ch√≥ng',
              'Giao h√†ng ƒë√∫ng h·∫°n',
              'ChƒÉm s√≥c kh√°ch h√†ng t·ªët',
              'Theo d√µi doanh thu v√† l·ª£i nhu·∫≠n',
            ]}
            renderItem={(item) => (
              <List.Item>
                <CheckCircleOutlined className="text-green-500 mr-2" />
                {item}
              </List.Item>
            )}
          />
        </div>
      ),
    },
  ];

  const benefits = [
    {
      title: 'Mi·ªÖn Ph√≠ ƒêƒÉng K√Ω',
      description: 'Kh√¥ng ph√≠ ƒëƒÉng k√Ω, ch·ªâ tr·∫£ ph√≠ khi c√≥ giao d·ªãch',
      icon: 'üí∞',
    },
    {
      title: 'Ti·∫øp C·∫≠n H√†ng Tri·ªáu Kh√°ch H√†ng',
      description: 'T·∫≠n d·ª•ng l∆∞·ª£ng kh√°ch h√†ng l·ªõn c·ªßa Tonic Store',
      icon: 'üë•',
    },
    {
      title: 'C√¥ng C·ª• Qu·∫£n L√Ω M·∫°nh M·∫Ω',
      description: 'Dashboard qu·∫£n l√Ω ƒë∆°n h√†ng, kho h√†ng, doanh thu',
      icon: 'üìä',
    },
    {
      title: 'H·ªó Tr·ª£ Marketing',
      description: 'C√°c c√¥ng c·ª• qu·∫£ng c√°o v√† khuy·∫øn m√£i t√≠ch h·ª£p',
      icon: 'üì¢',
    },
    {
      title: 'Thanh To√°n An To√†n',
      description: 'H·ªá th·ªëng thanh to√°n b·∫£o m·∫≠t, thu ti·ªÅn nhanh ch√≥ng',
      icon: 'üîí',
    },
    {
      title: 'H·ªó Tr·ª£ 24/7',
      description: 'ƒê·ªôi ng≈© h·ªó tr·ª£ chuy√™n nghi·ªáp, s·∫µn s√†ng gi√∫p ƒë·ª°',
      icon: 'üõü',
    },
  ];

  const requirements = [
    {
      title: 'Gi·∫•y Ph√©p Kinh Doanh',
      description: 'C√≥ gi·∫•y ph√©p kinh doanh h·ª£p l·ªá',
      required: true,
    },
    {
      title: 'S·∫£n Ph·∫©m Ch·∫•t L∆∞·ª£ng',
      description: 'S·∫£n ph·∫©m ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng, c√≥ ngu·ªìn g·ªëc r√µ r√†ng',
      required: true,
    },
    {
      title: 'Kho H√†ng',
      description: 'C√≥ kh·∫£ nƒÉng l∆∞u tr·ªØ v√† qu·∫£n l√Ω kho h√†ng',
      required: true,
    },
    {
      title: 'D·ªãch V·ª• Kh√°ch H√†ng',
      description: 'C√≥ kh·∫£ nƒÉng chƒÉm s√≥c kh√°ch h√†ng t·ªët',
      required: true,
    },
    {
      title: 'Kinh Nghi·ªám B√°n H√†ng',
      description: 'C√≥ kinh nghi·ªám b√°n h√†ng online (khuy·∫øn kh√≠ch)',
      required: false,
    },
  ];

  const commissionRates = [
    { category: 'Th·ªùi Trang', rate: '8-12%' },
    { category: 'ƒêi·ªán T·ª≠', rate: '5-8%' },
    { category: 'Nh√† C·ª≠a', rate: '6-10%' },
    { category: 'L√†m ƒê·∫πp', rate: '10-15%' },
    { category: 'Th·ªÉ Thao', rate: '7-11%' },
  ];

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            H∆∞·ªõng D·∫´n B√°n H√†ng
          </Title>
          <Paragraph className="text-lg text-gray-600">
            Tr·ªü th√†nh ƒë·ªëi t√°c b√°n h√†ng c·ªßa Tonic Store v√† c√πng ph√°t tri·ªÉn kinh doanh
          </Paragraph>
        </div>

        {/* Benefits */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">T·∫°i Sao Ch·ªçn Tonic Store?</Title>
          <Row gutter={[24, 24]}>
            {benefits.map((benefit, index) => (
              <Col xs={24} sm={12} lg={8} key={index}>
                <Card className="text-center h-full hover:shadow-lg transition-shadow">
                  <div className="text-4xl mb-4">{benefit.icon}</div>
                  <Title level={4} className="mb-2">{benefit.title}</Title>
                  <Paragraph className="text-gray-600">{benefit.description}</Paragraph>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Steps */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Quy Tr√¨nh Tr·ªü Th√†nh Ng∆∞·ªùi B√°n</Title>
          <Steps
            direction="vertical"
            items={steps.map(step => ({
              title: step.title,
              description: step.description,
              icon: step.icon,
            }))}
            onChange={handleStepChange}
          />
          
          <div className="mt-8">
            {steps.map((step, index) => (
              <div
                key={index}
                ref={(el) => (contentRefs.current[index] = el)}
                className="mb-6 scroll-mt-[156px]"
              >
              <Card key={index} className="mb-6">
                <Title level={3} className="mb-4">
                  B∆∞·ªõc {index + 1}: {step.title}
                </Title>
                {step.content}
              </Card>
              </div>
            ))}
          </div>
        </div>

        {/* Requirements */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Y√™u C·∫ßu Tr·ªü Th√†nh Ng∆∞·ªùi B√°n</Title>
          <Row gutter={[24, 24]}>
            {requirements.map((req, index) => (
              <Col xs={24} sm={12} lg={8} key={index}>
                <Card className="h-full">
                  <div className="flex items-start space-x-3">
                    <div>
                      <Title level={4} className="mb-2">{req.title}</Title>
                      <Paragraph className="text-gray-600">{req.description}</Paragraph>
                      <Text className={req.required ? "text-red-500" : "text-blue-500"}>
                        {req.required ? "B·∫Øt bu·ªôc" : "Khuy·∫øn kh√≠ch"}
                      </Text>
                    </div>
                  </div>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Commission Rates */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Ph√≠ Hoa H·ªìng Theo Danh M·ª•c</Title>
          <Card>
            <Row gutter={[16, 16]}>
              {commissionRates.map((item, index) => (
                <Col xs={24} sm={12} md={8} lg={4} key={index}>
                  <Card className="text-center">
                    <Title level={4} className="mb-2">{item.category}</Title>
                    <Text strong className="text-2xl text-blue-600">{item.rate}</Text>
                  </Card>
                </Col>
              ))}
            </Row>
            <Alert
              message="L∆∞u √Ω"
              description="Ph√≠ hoa h·ªìng ƒë∆∞·ª£c t√≠nh tr√™n gi√° b√°n cu·ªëi c√πng (sau khi tr·ª´ khuy·∫øn m√£i). Ph√≠ c√≥ th·ªÉ thay ƒë·ªïi t√πy theo ch√≠nh s√°ch v√† th·ªèa thu·∫≠n c·ª• th·ªÉ."
              type="info"
              showIcon
              className="mt-4"
            />
          </Card>
        </div>

        {/* Success Stories */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">C√¢u Chuy·ªán Th√†nh C√¥ng</Title>
          <Row gutter={[24, 24]}>
            <Col xs={24} md={12}>
              <Card>
                <div className="flex items-center space-x-4 mb-4">
                  <Avatar size={64} src="https://img.freepik.com/premium-photo/portrait-young-businesswoman_136595-1234.jpg" />
                  <div>
                    <Title level={4} className="mb-1">Ch·ªã Nguy·ªÖn Th·ªã A</Title>
                    <Text className="text-gray-600">Ch·ªß c·ª≠a h√†ng th·ªùi trang</Text>
                  </div>
                </div>
                <Paragraph>
                  "T·ª´ khi b√°n h√†ng tr√™n Tonic Store, doanh thu c·ªßa t√¥i tƒÉng 300% trong 6 th√°ng. 
                  H·ªá th·ªëng qu·∫£n l√Ω r·∫•t ti·ªán l·ª£i v√† kh√°ch h√†ng r·∫•t h√†i l√≤ng."
                </Paragraph>
                <div className="flex items-center space-x-4 mt-4">
                  <Space>
                    <TrophyOutlined className="text-yellow-500" />
                    <Text strong>Doanh thu: 500 tri·ªáu/th√°ng</Text>
                  </Space>
                </div>
              </Card>
            </Col>
            <Col xs={24} md={12}>
              <Card>
                <div className="flex items-center space-x-4 mb-4">
                  <Avatar size={64} src="https://img.freepik.com/premium-photo/portrait-young-businessman_136595-5678.jpg" />
                  <div>
                    <Title level={4} className="mb-1">Anh Tr·∫ßn VƒÉn B</Title>
                    <Text className="text-gray-600">Ch·ªß c·ª≠a h√†ng ƒëi·ªán t·ª≠</Text>
                  </div>
                </div>
                <Paragraph>
                  "Tonic Store gi√∫p t√¥i ti·∫øp c·∫≠n ƒë∆∞·ª£c nhi·ªÅu kh√°ch h√†ng h∆°n. 
                  C√¥ng c·ª• marketing t√≠ch h·ª£p r·∫•t hi·ªáu qu·∫£ v√† d·ªÖ s·ª≠ d·ª•ng."
                </Paragraph>
                <div className="flex items-center space-x-4 mt-4">
                  <Space>
                    <TrophyOutlined className="text-yellow-500" />
                    <Text strong>Doanh thu: 800 tri·ªáu/th√°ng</Text>
                  </Space>
                </div>
              </Card>
            </Col>
          </Row>
        </div>

        {/* CTA */}
        <div className="text-center">
          <Card className="bg-gradient-to-r from-blue-50 to-purple-50 border-0">
            <Space direction="vertical" size="large">
              <Title level={2} className="text-gray-800">
                S·∫µn S√†ng B·∫Øt ƒê·∫ßu?
              </Title>
              <Paragraph className="text-lg text-gray-600">
                ƒêƒÉng k√Ω ngay ƒë·ªÉ tr·ªü th√†nh ƒë·ªëi t√°c b√°n h√†ng c·ªßa Tonic Store
              </Paragraph>
              <Space size="large">
                <Button type="primary" size="large">
                  ƒêƒÉng K√Ω B√°n H√†ng
                </Button>
                <Button size="large" icon={<MessageOutlined />}>
                  T∆∞ V·∫•n Mi·ªÖn Ph√≠
                </Button>
              </Space>
            </Space>
          </Card>
        </div>

        {/* Contact */}
        <div className="mt-12 text-center">
          <Card className="bg-gray-50">
            <Title level={3} className="mb-4">
              C·∫ßn H·ªó Tr·ª£ Th√™m?
            </Title>
            <Space size="large">
              <Button icon={<PhoneOutlined />}>
                1900 1234
              </Button>
              <Button icon={<MessageOutlined />}>
                seller@tonicstore.com
              </Button>
            </Space>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default HowToSellPage;
