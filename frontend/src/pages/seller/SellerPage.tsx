import React, { useState } from 'react';
import { Card, Row, Col, Typography, Button, Input, Space, Tag, Modal, Form, Select, Steps, Alert } from 'antd';
import { 
  ShopOutlined, 
  UserOutlined, 
  DollarOutlined, 
  CheckCircleOutlined,
  QuestionCircleOutlined,
  PhoneOutlined,
  MailOutlined,
} from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;
const { Option } = Select;

const SellerPage: React.FC = () => {
  const [isRegisterModalVisible, setIsRegisterModalVisible] = useState(false);
  const [form] = Form.useForm();

  const sellerSteps = [
    {
      title: 'ƒêƒÉng K√Ω',
      description: 'T·∫°o t√†i kho·∫£n ng∆∞·ªùi b√°n',
      icon: <UserOutlined />,
    },
    {
      title: 'X√°c Minh',
      description: 'X√°c minh danh t√≠nh v√† gi·∫•y ph√©p',
      icon: <CheckCircleOutlined />,
    },
    {
      title: 'T·∫°o C·ª≠a H√†ng',
      description: 'Thi·∫øt l·∫≠p c·ª≠a h√†ng online',
      icon: <ShopOutlined />,
    },
    {
      title: 'B·∫Øt ƒê·∫ßu B√°n',
      description: 'ƒêƒÉng s·∫£n ph·∫©m v√† b√°n h√†ng',
      icon: <DollarOutlined />,
    },
  ];

  const sellerBenefits = [
    {
      title: 'Mi·ªÖn Ph√≠ ƒêƒÉng K√Ω',
      description: 'Kh√¥ng ph√≠ ƒëƒÉng k√Ω, ch·ªâ tr·∫£ ph√≠ khi c√≥ giao d·ªãch',
      icon: 'üí∞',
    },
    {
      title: 'Ti·∫øp C·∫≠n R·ªông',
      description: 'H√†ng tri·ªáu kh√°ch h√†ng ti·ªÅm nƒÉng',
      icon: 'üë•',
    },
    {
      title: 'C√¥ng C·ª• Qu·∫£n L√Ω',
      description: 'Dashboard qu·∫£n l√Ω ƒë∆°n h√†ng, kho h√†ng',
      icon: 'üìä',
    },
    {
      title: 'H·ªó Tr·ª£ Marketing',
      description: 'C√¥ng c·ª• qu·∫£ng c√°o v√† khuy·∫øn m√£i',
      icon: 'üì¢',
    },
    {
      title: 'Thanh To√°n An To√†n',
      description: 'H·ªá th·ªëng thanh to√°n b·∫£o m·∫≠t',
      icon: 'üîí',
    },
    {
      title: 'H·ªó Tr·ª£ 24/7',
      description: 'ƒê·ªôi ng≈© h·ªó tr·ª£ chuy√™n nghi·ªáp',
      icon: 'üõü',
    },
  ];

  const commissionRates = [
    { category: 'Th·ªùi Trang', rate: '8-12%', color: 'blue' },
    { category: 'ƒêi·ªán T·ª≠', rate: '5-8%', color: 'green' },
    { category: 'Nh√† C·ª≠a', rate: '6-10%', color: 'orange' },
    { category: 'L√†m ƒê·∫πp', rate: '10-15%', color: 'purple' },
    { category: 'Th·ªÉ Thao', rate: '7-11%', color: 'red' },
  ];

  const successStories = [
    {
      name: 'Ch·ªã Nguy·ªÖn Th·ªã A',
      business: 'C·ª≠a h√†ng th·ªùi trang',
      revenue: '500 tri·ªáu/th√°ng',
      period: '6 th√°ng',
      avatar: 'https://img.freepik.com/premium-photo/portrait-young-businesswoman_136595-1234.jpg',
    },
    {
      name: 'Anh Tr·∫ßn VƒÉn B',
      business: 'C·ª≠a h√†ng ƒëi·ªán t·ª≠',
      revenue: '800 tri·ªáu/th√°ng',
      period: '1 nƒÉm',
      avatar: 'https://img.freepik.com/premium-photo/portrait-young-businessman_136595-5678.jpg',
    },
  ];

  const requirements = [
    {
      title: 'Gi·∫•y Ph√©p Kinh Doanh',
      description: 'C√≥ gi·∫•y ph√©p kinh doanh h·ª£p l·ªá',
      required: true,
    },
    {
      title: 'S·∫£n Ph·∫©m Ch·∫•t L∆∞·ª£ng',
      description: 'S·∫£n ph·∫©m ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng, c√≥ ngu·ªìn g·ªëc r√µ r√†ng',
      required: true,
    },
    {
      title: 'Kho H√†ng',
      description: 'C√≥ kh·∫£ nƒÉng l∆∞u tr·ªØ v√† qu·∫£n l√Ω kho h√†ng',
      required: true,
    },
    {
      title: 'D·ªãch V·ª• Kh√°ch H√†ng',
      description: 'C√≥ kh·∫£ nƒÉng chƒÉm s√≥c kh√°ch h√†ng t·ªët',
      required: true,
    },
  ];

  const handleRegister = (values: any) => {
    console.log('Seller registration:', values);
    setIsRegisterModalVisible(false);
    form.resetFields();
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            K√™nh Ng∆∞·ªùi B√°n
          </Title>
          <Paragraph className="text-lg text-gray-600">
            Tr·ªü th√†nh ƒë·ªëi t√°c b√°n h√†ng c·ªßa Tonic Store v√† c√πng ph√°t tri·ªÉn kinh doanh
          </Paragraph>
        </div>

        {/* CTA */}
        <div className="text-center mb-16">
          <Card className="bg-blue-50 border-blue-200">
            <Space direction="vertical" size="large">
              <Title level={2} className="text-gray-800">
                S·∫µn S√†ng B·∫Øt ƒê·∫ßu B√°n H√†ng?
              </Title>
              <Paragraph className="text-lg text-gray-600">
                Tham gia c√πng h√†ng ngh√¨n ng∆∞·ªùi b√°n ƒëang th√†nh c√¥ng tr√™n Tonic Store
              </Paragraph>
              <Button
                type="primary"
                size="large"
                onClick={() => setIsRegisterModalVisible(true)}
              >
                ƒêƒÉng K√Ω Ngay
              </Button>
            </Space>
          </Card>
        </div>

        {/* Steps */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Quy Tr√¨nh Tr·ªü Th√†nh Ng∆∞·ªùi B√°n</Title>
          <Steps
            items={sellerSteps.map(step => ({
              title: step.title,
              description: step.description,
              icon: step.icon,
            }))}
            className="mb-8"
          />
        </div>

        {/* Benefits */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">L·ª£i √çch Khi B√°n H√†ng</Title>
          <Row gutter={[24, 24]}>
            {sellerBenefits.map((benefit, index) => (
              <Col xs={24} sm={12} lg={8} key={index}>
                <Card className="text-center h-full hover:shadow-lg transition-shadow">
                  <div className="text-4xl mb-4">{benefit.icon}</div>
                  <Title level={4} className="mb-2">{benefit.title}</Title>
                  <Paragraph className="text-gray-600">{benefit.description}</Paragraph>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Commission Rates */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Ph√≠ Hoa H·ªìng Theo Danh M·ª•c</Title>
          <Row gutter={[16, 16]}>
            {commissionRates.map((item, index) => (
              <Col xs={24} sm={12} md={8} lg={4} key={index}>
                <Card className="text-center">
                  <Title level={4} className="mb-2">{item.category}</Title>
                  <Tag color={item.color} className="text-lg px-4 py-2">
                    {item.rate}
                  </Tag>
                </Card>
              </Col>
            ))}
          </Row>
          <Alert
            message="L∆∞u √Ω"
            description="Ph√≠ hoa h·ªìng ƒë∆∞·ª£c t√≠nh tr√™n gi√° b√°n cu·ªëi c√πng (sau khi tr·ª´ khuy·∫øn m√£i). Ph√≠ c√≥ th·ªÉ thay ƒë·ªïi t√πy theo ch√≠nh s√°ch v√† th·ªèa thu·∫≠n c·ª• th·ªÉ."
            type="info"
            showIcon
            className="mt-4"
          />
        </div>

        {/* Success Stories */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">C√¢u Chuy·ªán Th√†nh C√¥ng</Title>
          <Row gutter={[24, 24]}>
            {successStories.map((story, index) => (
              <Col xs={24} md={12} key={index}>
                <Card>
                  <div className="flex items-center space-x-4 mb-4">
                    <img
                      src={story.avatar}
                      alt={story.name}
                      className="w-16 h-16 rounded-full object-cover"
                    />
                    <div>
                      <Title level={4} className="mb-1">{story.name}</Title>
                      <Text className="text-gray-600">{story.business}</Text>
                    </div>
                  </div>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="text-center">
                      <Text strong className="text-green-600 text-lg">
                        {story.revenue}
                      </Text>
                      <br />
                      <Text className="text-gray-500">Doanh thu</Text>
                    </div>
                    <div className="text-center">
                      <Text strong className="text-blue-600 text-lg">
                        {story.period}
                      </Text>
                      <br />
                      <Text className="text-gray-500">Th·ªùi gian</Text>
                    </div>
                  </div>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Requirements */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Y√™u C·∫ßu Tr·ªü Th√†nh Ng∆∞·ªùi B√°n</Title>
          <Row gutter={[24, 24]}>
            {requirements.map((req, index) => (
              <Col xs={24} sm={12} lg={6} key={index}>
                <Card className="h-full">
                  <div className="flex items-start space-x-3">
                    <div className="flex-shrink-0">
                      {req.required ? (
                        <CheckCircleOutlined className="text-green-500 text-xl" />
                      ) : (
                        <QuestionCircleOutlined className="text-blue-500 text-xl" />
                      )}
                    </div>
                    <div>
                      <Title level={4} className="mb-2">{req.title}</Title>
                      <Paragraph className="text-gray-600">{req.description}</Paragraph>
                      <Text className={req.required ? "text-red-500" : "text-blue-500"}>
                        {req.required ? "B·∫Øt bu·ªôc" : "Khuy·∫øn kh√≠ch"}
                      </Text>
                    </div>
                  </div>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Register Modal */}
        <Modal
          title="ƒêƒÉng K√Ω Tr·ªü Th√†nh Ng∆∞·ªùi B√°n"
          open={isRegisterModalVisible}
          onCancel={() => setIsRegisterModalVisible(false)}
          footer={null}
          width={600}
        >
          <Form form={form} onFinish={handleRegister} layout="vertical">
            <Row gutter={16}>
              <Col xs={24} sm={12}>
                <Form.Item
                  name="businessName"
                  label="T√™n doanh nghi·ªáp"
                  rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n doanh nghi·ªáp' }]}
                >
                  <Input placeholder="T√™n doanh nghi·ªáp" />
                </Form.Item>
              </Col>
              <Col xs={24} sm={12}>
                <Form.Item
                  name="contactPerson"
                  label="Ng∆∞·ªùi li√™n h·ªá"
                  rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n ng∆∞·ªùi li√™n h·ªá' }]}
                >
                  <Input placeholder="H·ªç v√† t√™n" />
                </Form.Item>
              </Col>
            </Row>

            <Row gutter={16}>
              <Col xs={24} sm={12}>
                <Form.Item
                  name="email"
                  label="Email"
                  rules={[
                    { required: true, message: 'Vui l√≤ng nh·∫≠p email' },
                    { type: 'email', message: 'Email kh√¥ng h·ª£p l·ªá' },
                  ]}
                >
                  <Input placeholder="Email doanh nghi·ªáp" />
                </Form.Item>
              </Col>
              <Col xs={24} sm={12}>
                <Form.Item
                  name="phone"
                  label="S·ªë ƒëi·ªán tho·∫°i"
                  rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' }]}
                >
                  <Input placeholder="S·ªë ƒëi·ªán tho·∫°i" />
                </Form.Item>
              </Col>
            </Row>

            <Form.Item
              name="businessType"
              label="Lo·∫°i h√¨nh kinh doanh"
              rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn lo·∫°i h√¨nh kinh doanh' }]}
            >
              <Select placeholder="Ch·ªçn lo·∫°i h√¨nh kinh doanh">
                <Option value="individual">C√° nh√¢n</Option>
                <Option value="enterprise">Doanh nghi·ªáp</Option>
                <Option value="cooperative">H·ª£p t√°c x√£</Option>
              </Select>
            </Form.Item>

            <Form.Item
              name="mainCategory"
              label="Danh m·ª•c ch√≠nh"
              rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn danh m·ª•c ch√≠nh' }]}
            >
              <Select placeholder="Ch·ªçn danh m·ª•c s·∫£n ph·∫©m ch√≠nh">
                <Option value="fashion">Th·ªùi Trang</Option>
                <Option value="electronics">ƒêi·ªán T·ª≠</Option>
                <Option value="home">Nh√† C·ª≠a</Option>
                <Option value="beauty">L√†m ƒê·∫πp</Option>
                <Option value="sports">Th·ªÉ Thao</Option>
              </Select>
            </Form.Item>

            <Form.Item
              name="description"
              label="M√¥ t·∫£ doanh nghi·ªáp"
              rules={[
                { required: true, message: 'Vui l√≤ng m√¥ t·∫£ doanh nghi·ªáp' },
                { min: 20, message: 'M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 20 k√Ω t·ª±' },
              ]}
            >
              <Input.TextArea
                rows={4}
                placeholder="M√¥ t·∫£ v·ªÅ doanh nghi·ªáp v√† s·∫£n ph·∫©m c·ªßa b·∫°n..."
              />
            </Form.Item>

            <Form.Item>
              <Button type="primary" htmlType="submit" size="large" block>
                G·ª≠i ƒêƒÉng K√Ω
              </Button>
            </Form.Item>
          </Form>
        </Modal>

        {/* Contact */}
        <div className="text-center">
          <Card className="bg-gray-50">
            <Title level={3} className="mb-4">
              C·∫ßn H·ªó Tr·ª£ Th√™m?
            </Title>
            <Space size="large">
              <Button icon={<PhoneOutlined />}>
                1900 1234
              </Button>
              <Button icon={<MailOutlined />}>
                seller@tonicstore.com
              </Button>
            </Space>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default SellerPage;
