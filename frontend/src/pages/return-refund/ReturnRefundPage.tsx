import React, { useState } from 'react';
import { Card, Steps, Typography, Row, Col, Button, Form, Input, Select, Upload, message, Alert, List, Space } from 'antd';
import { 
  FileTextOutlined, 
  ShoppingCartOutlined, 
  CheckCircleOutlined,
  ExclamationCircleOutlined,
  UploadOutlined,
  PhoneOutlined,
  MailOutlined
} from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;
const { TextArea } = Input;
const { Option } = Select;

const ReturnRefundPage: React.FC = () => {
  const [form] = Form.useForm();
  const [currentStep, setCurrentStep] = useState(0);

  const returnSteps = [
    {
      title: 'Ki·ªÉm Tra ƒêi·ªÅu Ki·ªán',
      description: 'X√°c nh·∫≠n ƒë∆°n h√†ng ƒë·ªß ƒëi·ªÅu ki·ªán ƒë·ªïi tr·∫£',
      icon: <CheckCircleOutlined />,
    },
    {
      title: 'ƒêi·ªÅn Th√¥ng Tin',
      description: 'Cung c·∫•p th√¥ng tin ƒë∆°n h√†ng v√† l√Ω do ƒë·ªïi tr·∫£',
      icon: <FileTextOutlined />,
    },
    {
      title: 'G·ª≠i H√†ng V·ªÅ',
      description: 'ƒê√≥ng g√≥i v√† g·ª≠i h√†ng v·ªÅ ƒë·ªãa ch·ªâ c·ªßa ch√∫ng t√¥i',
      icon: <ShoppingCartOutlined />,
    },
    {
      title: 'Ho√†n Ti·ªÅn',
      description: 'Ch√∫ng t√¥i ki·ªÉm tra v√† ho√†n ti·ªÅn cho b·∫°n',
      icon: <CheckCircleOutlined />,
    },
  ];

  const returnConditions = [
    {
      title: 'Th·ªùi Gian ƒê·ªïi Tr·∫£',
      content: '7 ng√†y k·ªÉ t·ª´ khi nh·∫≠n h√†ng',
      icon: '‚è∞',
    },
    {
      title: 'T√¨nh Tr·∫°ng S·∫£n Ph·∫©m',
      content: 'C√≤n nguy√™n v·∫πn, ch∆∞a s·ª≠ d·ª•ng, c√≥ ƒë·∫ßy ƒë·ªß ph·ª• ki·ªán',
      icon: 'üì¶',
    },
    {
      title: 'H√≥a ƒê∆°n',
      content: 'C√≥ h√≥a ƒë∆°n mua h√†ng ho·∫∑c email x√°c nh·∫≠n',
      icon: 'üßæ',
    },
    {
      title: 'Lo·∫°i S·∫£n Ph·∫©m',
      content: 'Kh√¥ng ph·∫£i ƒë·ªì l√≥t, s·∫£n ph·∫©m c√° nh√¢n h√≥a',
      icon: 'üëï',
    },
  ];

  const returnReasons = [
    'S·∫£n ph·∫©m b·ªã l·ªói',
    'Kh√¥ng ƒë√∫ng m√¥ t·∫£',
    'Giao sai s·∫£n ph·∫©m',
    'Kh√¥ng v·ª´a size',
    'Kh√¥ng th√≠ch s·∫£n ph·∫©m',
    'Thay ƒë·ªïi √Ω ƒë·ªãnh',
    'Kh√°c',
  ];

  const refundMethods = [
    {
      method: 'Ho√†n ti·ªÅn v√†o t√†i kho·∫£n ng√¢n h√†ng',
      time: '3-5 ng√†y l√†m vi·ªác',
      icon: 'üè¶',
    },
    {
      method: 'Ho√†n ti·ªÅn v√†o v√≠ ƒëi·ªán t·ª≠',
      time: '1-2 ng√†y l√†m vi·ªác',
      icon: 'üì±',
    },
    {
      method: 'Ho√†n ti·ªÅn v√†o t√†i kho·∫£n Tonic Store',
      time: 'Ngay l·∫≠p t·ª©c',
      icon: 'üí≥',
    },
  ];

  const handleSubmit = async (values: any) => {
    try {
      console.log('Return request submitted:', values);
      message.success('Y√™u c·∫ßu ƒë·ªïi tr·∫£ ƒë√£ ƒë∆∞·ª£c g·ª≠i! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i trong v√≤ng 24h.');
      form.resetFields();
      setCurrentStep(0);
    } catch (error) {
      message.error('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.');
    }
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            ƒê·ªïi Tr·∫£ & Ho√†n Ti·ªÅn
          </Title>
          <Paragraph className="text-lg text-gray-600">
            Ch√≠nh s√°ch ƒë·ªïi tr·∫£ v√† ho√†n ti·ªÅn linh ho·∫°t, ƒë·∫£m b·∫£o quy·ªÅn l·ª£i kh√°ch h√†ng
          </Paragraph>
        </div>

        {/* Return Process Steps */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">Quy Tr√¨nh ƒê·ªïi Tr·∫£</Title>
          <Steps
            current={currentStep}
            items={returnSteps.map(step => ({
              title: step.title,
              description: step.description,
              icon: step.icon,
            }))}
            className="mb-8"
          />
        </div>

        {/* Return Conditions */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">ƒêi·ªÅu Ki·ªán ƒê·ªïi Tr·∫£</Title>
          <Row gutter={[24, 24]}>
            {returnConditions.map((condition, index) => (
              <Col xs={24} sm={12} lg={6} key={index}>
                <Card className="text-center h-full">
                  <div className="text-4xl mb-4">{condition.icon}</div>
                  <Title level={4} className="mb-2">{condition.title}</Title>
                  <Paragraph className="text-gray-600">{condition.content}</Paragraph>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Return Form */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">Y√™u C·∫ßu ƒê·ªïi Tr·∫£</Title>
          <Card>
            <Form
              form={form}
              layout="vertical"
              onFinish={handleSubmit}
              className="max-w-2xl mx-auto"
            >
              <Row gutter={16}>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="orderNumber"
                    label="M√£ ƒë∆°n h√†ng"
                    rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p m√£ ƒë∆°n h√†ng' }]}
                  >
                    <Input placeholder="VD: TONIC2024001" />
                  </Form.Item>
                </Col>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="phone"
                    label="S·ªë ƒëi·ªán tho·∫°i"
                    rules={[
                      { required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' },
                      { pattern: /^[0-9+\-\s()]+$/, message: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá' },
                    ]}
                  >
                    <Input placeholder="0123 456 789" />
                  </Form.Item>
                </Col>
              </Row>

              <Form.Item
                name="reason"
                label="L√Ω do ƒë·ªïi tr·∫£"
                rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn l√Ω do ƒë·ªïi tr·∫£' }]}
              >
                <Select placeholder="Ch·ªçn l√Ω do ƒë·ªïi tr·∫£">
                  {returnReasons.map(reason => (
                    <Option key={reason} value={reason}>
                      {reason}
                    </Option>
                  ))}
                </Select>
              </Form.Item>

              <Form.Item
                name="description"
                label="M√¥ t·∫£ chi ti·∫øt"
                rules={[
                  { required: true, message: 'Vui l√≤ng m√¥ t·∫£ chi ti·∫øt' },
                  { min: 10, message: 'M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±' },
                ]}
              >
                <TextArea
                  rows={4}
                  placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ v·∫•n ƒë·ªÅ ho·∫∑c l√Ω do ƒë·ªïi tr·∫£..."
                />
              </Form.Item>

              <Form.Item
                name="images"
                label="H√¨nh ·∫£nh s·∫£n ph·∫©m"
                extra="T·∫£i l√™n h√¨nh ·∫£nh s·∫£n ph·∫©m ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ h·ªó tr·ª£ t·ªët h∆°n"
              >
                <Upload
                  listType="picture-card"
                  maxCount={5}
                  beforeUpload={() => false}
                >
                  <div>
                    <UploadOutlined />
                    <div style={{ marginTop: 8 }}>T·∫£i l√™n</div>
                  </div>
                </Upload>
              </Form.Item>

              <Form.Item>
                <Button type="primary" htmlType="submit" size="large" block>
                  G·ª≠i Y√™u C·∫ßu ƒê·ªïi Tr·∫£
                </Button>
              </Form.Item>
            </Form>
          </Card>
        </div>

        {/* Refund Methods */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">Ph∆∞∆°ng Th·ª©c Ho√†n Ti·ªÅn</Title>
          <Row gutter={[24, 24]}>
            {refundMethods.map((method, index) => (
              <Col xs={24} md={8} key={index}>
                <Card className="text-center h-full">
                  <div className="text-4xl mb-4">{method.icon}</div>
                  <Title level={4} className="mb-2">{method.method}</Title>
                  <Text className="text-gray-600">Th·ªùi gian: {method.time}</Text>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* FAQ */}
        <div className="mb-12">
          <Title level={2} className="text-center mb-8">C√¢u H·ªèi Th∆∞·ªùng G·∫∑p</Title>
          <div className="space-y-4">
            <Card>
              <Title level={4}>T√¥i c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m sau 7 ng√†y kh√¥ng?</Title>
              <Paragraph>
                R·∫•t ti·∫øc, ch√∫ng t√¥i ch·ªâ ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ trong v√≤ng 7 ng√†y k·ªÉ t·ª´ khi nh·∫≠n h√†ng. 
                Tuy nhi√™n, n·∫øu s·∫£n ph·∫©m c√≥ l·ªói t·ª´ nh√† s·∫£n xu·∫•t, ch√∫ng t√¥i s·∫Ω xem x√©t t·ª´ng tr∆∞·ªùng h·ª£p c·ª• th·ªÉ.
              </Paragraph>
            </Card>
            <Card>
              <Title level={4}>Ph√≠ v·∫≠n chuy·ªÉn ƒë·ªïi tr·∫£ ai ch·ªãu?</Title>
              <Paragraph>
                N·∫øu s·∫£n ph·∫©m c√≥ l·ªói t·ª´ ph√≠a ch√∫ng t√¥i, ch√∫ng t√¥i s·∫Ω ch·ªãu ph√≠ v·∫≠n chuy·ªÉn. 
                N·∫øu b·∫°n ƒë·ªïi tr·∫£ v√¨ l√Ω do c√° nh√¢n, ph√≠ v·∫≠n chuy·ªÉn s·∫Ω do b·∫°n ch·ªãu.
              </Paragraph>
            </Card>
            <Card>
              <Title level={4}>Th·ªùi gian ho√†n ti·ªÅn l√† bao l√¢u?</Title>
              <Paragraph>
                Th·ªùi gian ho√†n ti·ªÅn t√πy thu·ªôc v√†o ph∆∞∆°ng th·ª©c thanh to√°n: 
                T√†i kho·∫£n ng√¢n h√†ng: 3-5 ng√†y, V√≠ ƒëi·ªán t·ª≠: 1-2 ng√†y, 
                T√†i kho·∫£n Tonic Store: ngay l·∫≠p t·ª©c.
              </Paragraph>
            </Card>
            <Card>
              <Title level={4}>T√¥i c√≥ th·ªÉ ƒë·ªïi size thay v√¨ tr·∫£ h√†ng kh√¥ng?</Title>
              <Paragraph>
                C√≥, b·∫°n c√≥ th·ªÉ y√™u c·∫ßu ƒë·ªïi size trong v√≤ng 7 ng√†y. 
                Ch√∫ng t√¥i s·∫Ω ki·ªÉm tra t√¨nh tr·∫°ng s·∫£n ph·∫©m v√† size c√≥ s·∫µn ƒë·ªÉ x·ª≠ l√Ω y√™u c·∫ßu c·ªßa b·∫°n.
              </Paragraph>
            </Card>
          </div>
        </div>

        {/* Contact Support */}
        <div className="text-center">
          <Card className="bg-blue-50 border-blue-200">
            <Space direction="vertical" size="large">
              <Title level={3} className="text-blue-800">
                C·∫ßn H·ªó Tr·ª£ Th√™m?
              </Title>
              <Paragraph className="text-blue-700">
                ƒê·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi√∫p ƒë·ª° b·∫°n
              </Paragraph>
              <Space size="large">
                <Button type="primary" size="large" icon={<PhoneOutlined />}>
                  1900 1234
                </Button>
                <Button size="large" icon={<MailOutlined />}>
                  support@tonicstore.com
                </Button>
              </Space>
            </Space>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default ReturnRefundPage;
