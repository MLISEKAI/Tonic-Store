import React, { useState } from 'react';
import { Card, Row, Col, Typography, Button, Input, Space, List, Tag, Modal, Form, Select, Upload, message } from 'antd';
import { 
  PhoneOutlined, 
  MailOutlined, 
  UserOutlined,
  FileTextOutlined,
  UploadOutlined,
  CheckCircleOutlined,
  TeamOutlined,
  CameraOutlined
} from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;
const { TextArea } = Input;
const { Option } = Select;

const MediaContactPage: React.FC = () => {
  const [isContactModalVisible, setIsContactModalVisible] = useState(false);
  const [form] = Form.useForm();

  const mediaContacts = [
    {
      name: 'Nguy·ªÖn Th·ªã A',
      position: 'Tr∆∞·ªüng ph√≤ng Truy·ªÅn th√¥ng',
      email: 'media@tonicstore.com',
      phone: '0901 234 567',
      avatar: 'https://img.freepik.com/premium-photo/portrait-young-businesswoman_136595-1234.jpg',
    },
    {
      name: 'Tr·∫ßn VƒÉn B',
      position: 'Chuy√™n vi√™n PR',
      email: 'pr@tonicstore.com',
      phone: '0901 234 568',
      avatar: 'https://img.freepik.com/premium-photo/portrait-young-businessman_136595-5678.jpg',
    },
    {
      name: 'L√™ Th·ªã C',
      position: 'Chuy√™n vi√™n Marketing',
      email: 'marketing@tonicstore.com',
      phone: '0901 234 569',
      avatar: 'https://img.freepik.com/premium-photo/portrait-young-businesswoman_136595-9012.jpg',
    },
  ];

  const pressReleases = [
    {
      title: 'Tonic Store ra m·∫Øt b·ªô s∆∞u t·∫≠p th·ªùi trang m√πa h√® 2024',
      date: '2024-01-15',
      category: 'Th·ªùi trang',
      summary: 'B·ªô s∆∞u t·∫≠p m·ªõi v·ªõi thi·∫øt k·∫ø hi·ªán ƒë·∫°i, ch·∫•t li·ªáu th√¢n thi·ªán m√¥i tr∆∞·ªùng...',
    },
    {
      title: 'Tonic Store ƒë·∫°t m·ªëc 1 tri·ªáu kh√°ch h√†ng',
      date: '2024-01-10',
      category: 'Th√†nh t·ª±u',
      summary: 'C·ªôt m·ªëc quan tr·ªçng trong h√†nh tr√¨nh ph√°t tri·ªÉn c·ªßa th∆∞∆°ng hi·ªáu...',
    },
    {
      title: 'Tonic Store h·ª£p t√°c v·ªõi nh√† thi·∫øt k·∫ø n·ªïi ti·∫øng',
      date: '2024-01-05',
      category: 'H·ª£p t√°c',
      summary: 'S·ª± h·ª£p t√°c ƒë·∫∑c bi·ªát mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m ƒë·ªôc ƒë√°o...',
    },
  ];

  const mediaKits = [
    {
      name: 'Logo Tonic Store',
      description: 'Logo ch√≠nh th·ª©c v√† c√°c bi·∫øn th·ªÉ',
      format: 'PNG, SVG, AI',
      size: '2.5 MB',
    },
    {
      name: 'H√¨nh ·∫£nh s·∫£n ph·∫©m',
      description: 'B·ªô h√¨nh ·∫£nh s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao',
      format: 'JPG, PNG',
      size: '15.2 MB',
    },
    {
      name: 'H√¨nh ·∫£nh team',
      description: '·∫¢nh ch√¢n dung ƒë·ªôi ng≈© l√£nh ƒë·∫°o',
      format: 'JPG',
      size: '8.7 MB',
    },
    {
      name: 'Brand Guidelines',
      description: 'H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng th∆∞∆°ng hi·ªáu',
      format: 'PDF',
      size: '5.1 MB',
    },
  ];

  const contactReasons = [
    'Ph·ªèng v·∫•n CEO/Founder',
    'Th√¥ng tin v·ªÅ s·∫£n ph·∫©m m·ªõi',
    'Th√¥ng tin v·ªÅ s·ª± ki·ªán',
    'H·ª£p t√°c truy·ªÅn th√¥ng',
    'Xin t√†i li·ªáu b√°o ch√≠',
    'Kh√°c',
  ];

  const handleSubmit = (values: any) => {
    console.log('Media contact form:', values);
    message.success('Y√™u c·∫ßu ƒë√£ ƒë∆∞·ª£c g·ª≠i! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i trong v√≤ng 24h.');
    setIsContactModalVisible(false);
    form.resetFields();
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            Li√™n H·ªá Truy·ªÅn Th√¥ng
          </Title>
          <Paragraph className="text-lg text-gray-600">
            Th√¥ng tin li√™n h·ªá cho b√°o ch√≠, truy·ªÅn th√¥ng v√† c√°c ƒë·ªëi t√°c
          </Paragraph>
        </div>

        {/* Contact Team */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">ƒê·ªôi Ng≈© Truy·ªÅn Th√¥ng</Title>
          <Row gutter={[24, 24]}>
            {mediaContacts.map((contact, index) => (
              <Col xs={24} sm={12} lg={8} key={index}>
                <Card className="text-center h-full">
                  <img
                    src={contact.avatar}
                    alt={contact.name}
                    className="w-24 h-24 rounded-full mx-auto mb-4 object-cover"
                  />
                  <Title level={4} className="mb-2">{contact.name}</Title>
                  <Text className="text-blue-600 block mb-4">{contact.position}</Text>
                  <Space direction="vertical" size="small">
                    <Space>
                      <MailOutlined />
                      <Text>{contact.email}</Text>
                    </Space>
                    <Space>
                      <PhoneOutlined />
                      <Text>{contact.phone}</Text>
                    </Space>
                  </Space>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Press Releases */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">Th√¥ng C√°o B√°o Ch√≠</Title>
          <div className="space-y-4">
            {pressReleases.map((release, index) => (
              <Card key={index} className="hover:shadow-lg transition-shadow">
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <Title level={4} className="mb-2">{release.title}</Title>
                    <Paragraph className="text-gray-600 mb-3">{release.summary}</Paragraph>
                    <Space>
                      <Tag color="blue">{release.category}</Tag>
                      <Text className="text-gray-500">{release.date}</Text>
                    </Space>
                  </div>
                  <Button type="primary" size="small">
                    Xem Chi Ti·∫øt
                  </Button>
                </div>
              </Card>
            ))}
          </div>
        </div>

        {/* Media Kits */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">T√†i Li·ªáu Truy·ªÅn Th√¥ng</Title>
          <Row gutter={[24, 24]}>
            {mediaKits.map((kit, index) => (
              <Col xs={24} sm={12} lg={6} key={index}>
                <Card className="text-center h-full hover:shadow-lg transition-shadow">
                  <div className="text-4xl mb-4">üìÅ</div>
                  <Title level={5} className="mb-2">{kit.name}</Title>
                  <Paragraph className="text-gray-600 mb-3">{kit.description}</Paragraph>
                  <div className="space-y-1">
                    <Text className="text-sm text-gray-500">Format: {kit.format}</Text>
                    <Text className="text-sm text-gray-500">Size: {kit.size}</Text>
                  </div>
                  <Button type="primary" size="small" className="mt-3">
                    T·∫£i Xu·ªëng
                  </Button>
                </Card>
              </Col>
            ))}
          </Row>
        </div>

        {/* Contact Form */}
        <div className="mb-16">
          <Title level={2} className="text-center mb-8">G·ª≠i Y√™u C·∫ßu Truy·ªÅn Th√¥ng</Title>
          <Card className="max-w-2xl mx-auto">
            <Form
              form={form}
              layout="vertical"
              onFinish={handleSubmit}
            >
              <Row gutter={16}>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="name"
                    label="H·ªç v√† t√™n"
                    rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p h·ªç v√† t√™n' }]}
                  >
                    <Input placeholder="H·ªç v√† t√™n" />
                  </Form.Item>
                </Col>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="organization"
                    label="T·ªï ch·ª©c/B√°o ch√≠"
                    rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n t·ªï ch·ª©c' }]}
                  >
                    <Input placeholder="T√™n t·ªï ch·ª©c" />
                  </Form.Item>
                </Col>
              </Row>

              <Row gutter={16}>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="email"
                    label="Email"
                    rules={[
                      { required: true, message: 'Vui l√≤ng nh·∫≠p email' },
                      { type: 'email', message: 'Email kh√¥ng h·ª£p l·ªá' },
                    ]}
                  >
                    <Input placeholder="Email" />
                  </Form.Item>
                </Col>
                <Col xs={24} sm={12}>
                  <Form.Item
                    name="phone"
                    label="S·ªë ƒëi·ªán tho·∫°i"
                    rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' }]}
                  >
                    <Input placeholder="S·ªë ƒëi·ªán tho·∫°i" />
                  </Form.Item>
                </Col>
              </Row>

              <Form.Item
                name="reason"
                label="L√Ω do li√™n h·ªá"
                rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn l√Ω do li√™n h·ªá' }]}
              >
                <Select placeholder="Ch·ªçn l√Ω do li√™n h·ªá">
                  {contactReasons.map(reason => (
                    <Option key={reason} value={reason}>
                      {reason}
                    </Option>
                  ))}
                </Select>
              </Form.Item>

              <Form.Item
                name="description"
                label="M√¥ t·∫£ chi ti·∫øt"
                rules={[
                  { required: true, message: 'Vui l√≤ng m√¥ t·∫£ chi ti·∫øt' },
                  { min: 20, message: 'M√¥ t·∫£ ph·∫£i c√≥ √≠t nh·∫•t 20 k√Ω t·ª±' },
                ]}
              >
                <TextArea
                  rows={4}
                  placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ y√™u c·∫ßu c·ªßa b·∫°n..."
                />
              </Form.Item>

              <Form.Item
                name="attachments"
                label="T√†i li·ªáu ƒë√≠nh k√®m"
                extra="T·∫£i l√™n t√†i li·ªáu li√™n quan (n·∫øu c√≥)"
              >
                <Upload
                  listType="picture-card"
                  maxCount={5}
                  beforeUpload={() => false}
                >
                  <div>
                    <UploadOutlined />
                    <div style={{ marginTop: 8 }}>T·∫£i l√™n</div>
                  </div>
                </Upload>
              </Form.Item>

              <Form.Item>
                <Button type="primary" htmlType="submit" size="large" block>
                  G·ª≠i Y√™u C·∫ßu
                </Button>
              </Form.Item>
            </Form>
          </Card>
        </div>

        {/* Quick Contact */}
        <div className="text-center">
          <Card className="bg-blue-50 border-blue-200">
            <Space direction="vertical" size="large">
              <Title level={3} className="text-blue-800">
                Li√™n H·ªá Nhanh
              </Title>
              <Paragraph className="text-blue-700">
                C·∫ßn th√¥ng tin kh·∫©n c·∫•p? Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ch√∫ng t√¥i
              </Paragraph>
              <Space size="large">
                <Button type="primary" size="large" icon={<PhoneOutlined />}>
                  0901 234 567
                </Button>
                <Button size="large" icon={<MailOutlined />}>
                  media@tonicstore.com
                </Button>
              </Space>
            </Space>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default MediaContactPage;
