services:
  server-fe:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env 
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_PORT=${VITE_PORT}
      - VITE_FRONTEND_URL=${VITE_FRONTEND_URL}
    volumes:
      - ./frontend:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: on-failure

    ports:
      - "5173:5173"
    command: yarn run dev
    networks:
      - app-network

  server-be:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:5173
    volumes:
      - ./backend:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    ports:
      - '8085:8080'
    command: 'yarn run dev'
    depends_on:
      - db
    networks:
      - app-network

  prisma-studio:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "5555:5555"
    command: npx prisma studio
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: tonic-store
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Vietnam
    volumes:
      - ./docker/db/data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "9000:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
